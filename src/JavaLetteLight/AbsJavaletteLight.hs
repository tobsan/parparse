module AbsJavaletteLight where

-- Haskell module generated by the BNF converter


newtype Ident = Ident String deriving (Eq,Ord,Show)
data Prog =
   Fun Typ Ident [Stm]
  deriving (Eq,Ord,Show)

data Stm =
   SDecl Typ Ident
 | SAss Ident Exp
 | SIncr Ident
 | SWhile Exp [Stm]
  deriving (Eq,Ord,Show)

data Exp =
   ELt Exp Exp
 | EPlus Exp Exp
 | ETimes Exp Exp
 | EVar Ident
 | EInt Integer
 | EDouble Double
 | ExpT Typ Exp
  deriving (Eq,Ord,Show)

data Typ =
   TInt
 | TDouble
  deriving (Eq,Ord,Show)

