module SkelJavaletteLight where

-- Haskell module generated by the BNF converter

import AbsJavaletteLight
import ErrM
type Result = Err String

failure :: Show a => a -> Result
failure x = Bad $ "Undefined case: " ++ show x

transIdent :: Ident -> Result
transIdent x = case x of
  Ident str  -> failure x


transProg :: Prog -> Result
transProg x = case x of
  Fun typ id stms  -> failure x


transStm :: Stm -> Result
transStm x = case x of
  SDecl typ id  -> failure x
  SAss id exp  -> failure x
  SIncr id  -> failure x
  SWhile exp stms  -> failure x


transExp :: Exp -> Result
transExp x = case x of
  ELt exp1 exp2  -> failure x
  EPlus exp1 exp2  -> failure x
  ETimes exp1 exp2  -> failure x
  EVar id  -> failure x
  EInt n  -> failure x
  EDouble d  -> failure x
  ExpT typ exp  -> failure x


transTyp :: Typ -> Result
transTyp x = case x of
  TInt  -> failure x
  TDouble  -> failure x



